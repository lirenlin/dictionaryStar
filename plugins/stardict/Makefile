#############################################################################
# Makefile for building: libstardict.so
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sun Sep 9 13:30:02 2012
# Project:  stardict.pro
# Template: lib
# Command: /usr/bin/qmake CONFIG+=release -o Makefile stardict.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDICTSTAR_PLUGINS_DIR=\"/opt/myApp/lib/myApp/plugins\" -DQT_NO_DEBUG -DQT_PLUGIN -DQT_DECLARATIVE_LIB -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -Wno-psabi -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -Wno-psabi -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/linux-g++-maemo -I. -I/targets/HARMATTAN_ARMEL/usr/include/qt4/QtCore -I/targets/HARMATTAN_ARMEL/usr/include/qt4/QtNetwork -I/targets/HARMATTAN_ARMEL/usr/include/qt4/QtGui -I/targets/HARMATTAN_ARMEL/usr/include/qt4/QtWebKit -I/targets/HARMATTAN_ARMEL/usr/include/qt4/QtDeclarative -I/targets/HARMATTAN_ARMEL/usr/include/qt4 -I../../../dictionarystar-dictionarystar -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -lz -larchive -lglib-2.0 -lQtDeclarative -lQtWebKit -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = stardict.cpp \
		dictziplib.cpp \
		distance.cpp \
		lib.cpp moc_stardict.cpp
OBJECTS       = stardict.o \
		dictziplib.o \
		distance.o \
		lib.o \
		moc_stardict.o
DIST          = /targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/g++.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/unix.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/linux.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/qconfig.pri \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../DictionaryStar.pri \
		../plugin.pri \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/release.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/warn_on.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/moc.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/resources.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/uic.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/lex.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		stardict.pro
QMAKE_TARGET  = stardict
DESTDIR       = 
TARGET        = libstardict.so
TARGETD       = libstardict.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



Makefile: stardict.pro  /targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/linux-g++-maemo/qmake.conf /targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/g++.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/unix.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/linux.conf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/qconfig.pri \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../DictionaryStar.pri \
		../plugin.pri \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/release.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/warn_on.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/moc.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/resources.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/uic.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/lex.prf \
		/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtDeclarative.prl \
		/usr/lib/libQtWebKit.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) CONFIG+=release -o Makefile stardict.pro
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/g++.conf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/unix.conf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/common/linux.conf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/qconfig.pri:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_functions.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt_config.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_pre.prf:
../../DictionaryStar.pri:
../plugin.pri:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/release.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/default_post.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/warn_on.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/qt.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/unix/thread.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/moc.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/resources.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/uic.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/yacc.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/lex.prf:
/targets/HARMATTAN_ARMEL/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtDeclarative.prl:
/usr/lib/libQtWebKit.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) CONFIG+=release -o Makefile stardict.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/stardict1.0.0 || $(MKDIR) .tmp/stardict1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/stardict1.0.0/ && $(COPY_FILE) --parents stardict.h dictziplib.hpp distance.h file.hpp lib.h mapfile.hpp .tmp/stardict1.0.0/ && $(COPY_FILE) --parents stardict.cpp dictziplib.cpp distance.cpp lib.cpp .tmp/stardict1.0.0/ && (cd `dirname .tmp/stardict1.0.0` && $(TAR) stardict1.0.0.tar stardict1.0.0 && $(COMPRESS) stardict1.0.0.tar) && $(MOVE) `dirname .tmp/stardict1.0.0`/stardict1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/stardict1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_stardict.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_stardict.cpp
moc_stardict.cpp: lib.h \
		dictziplib.hpp \
		mapfile.hpp \
		../dictplugin.h \
		stardict.h
	/usr/bin/moc $(DEFINES) $(INCPATH) stardict.h -o moc_stardict.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

stardict.o: stardict.cpp stardict.h \
		lib.h \
		dictziplib.hpp \
		mapfile.hpp \
		../dictplugin.h \
		file.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stardict.o stardict.cpp

dictziplib.o: dictziplib.cpp dictziplib.hpp \
		mapfile.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dictziplib.o dictziplib.cpp

distance.o: distance.cpp distance.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o distance.o distance.cpp

lib.o: lib.cpp distance.h \
		file.hpp \
		mapfile.hpp \
		lib.h \
		dictziplib.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lib.o lib.cpp

moc_stardict.o: moc_stardict.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_stardict.o moc_stardict.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/opt/myApp/lib/myApp/plugins/ || $(MKDIR) $(INSTALL_ROOT)/opt/myApp/lib/myApp/plugins/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/opt/myApp/lib/myApp/plugins/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/opt/myApp/lib/myApp/plugins/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/opt/myApp/lib/myApp/plugins/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

